Server 사용되는 저장 객체

Application - 서버가 시작시 생성: 모든 사용자와 공통으로 사용 - 서버가 필요한 데이터 : 서버 종료 시 제거
    ↓
session - 사용자가 처음 접속시 생성: 사용자가 필요로 하는 데이터 SESSIONID-쿠키-사용자 컴퓨터에 저장 : 사용자 접속 종료 시 제거
    ↓ 
request - 요청이 있으면 생성 - 클라이언트 정보 : 요청 종료 시 제거
    ↓
page - 화면에 표시할 때 생성 - 화면 표시 정보 : 화면표시 종료 시 제거

만약에 request를 가지고 있으면 session과 Application을 꺼내서 불러올 수 있다.

setAttribute(k,y)
getAttribute(k,y)
- 모두 공통으로 씀

**server ->url을 이용해서 서버 자원에 접근

uri = 자원
/board/list.jsp = list_jsp.class=> tomcat -> public class list_jsp{}
request, response로 파라메터를 가져와서 실행하는 servlet 
doget(), dopost(), init(), service()

servlet(url pattern => 실행클래스)

사용자 url 요청 -> 데이터처리(JAVA) ->request.forward:(htmle->string + <% %>->javadata)-> 화면에 보이기(JSP)
/board/list.do -> 게시판이라고 알아내는 controller를 짜고-> 게시판에 Controller를 짜고

** 페이지 이동 시키는 방법
1. 브라우저의 주소란에 url을 입력한다.
http://localhost:8080/test/board/list.jsp
naver.com
http://www.naver.com:80/index.html

2. HTML <a href="url">연결</a> : 연결을 클릭하면 url로 이동

3. HTML <form action="url"></form> : 많은 데이터를 url로 넘겨서 처리하고자 할때 -> input, select, textarea -> 데이터 넘기기 : button tag
url?key=value&key=value

4. JS <tag onclick="location='url'">클릭</tag>
 location = "url";

5. response.sendRedirect("url"); -> 서버에서 클라이언트의 브라저 href의 내용을 바꾸도록 요청 ->자동이동
=> java

속도차이 때문에 사용되는 메모리 buffer

로그인처리는 session으로 해서 한 후에 sitemesh를 해야함
