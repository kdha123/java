인터페이스 와 추상클래스 

1. 인터페이스는 추상 클래스에 일종이다.
2. 인터페이스의 모든 메서드는 
    내용이 없는 추상메서드만 선언할 수 있다 
3. 추상클래스는 일부내용있는 메서드
    내용없는 추상메서드가 혼합된 것이다 

4. 인터페이스의 메서드 접근제한자는 항상 public이다
    생략 하더라도 public 이다

5. 인터페이스의 필드(변수)는 항상 static final 이다
    생략하더라도 static final 이다 
    예: static final int MAX=100;

   cf>c언어에서 변수를 상수화 할때      const int MAX=100;
   cf>java언어에서 변수를 상수화 할때 final int MAX=100;
        MAX 값 변경 불가능 

        Math.PI 를 API 참조

6. 추상 클래스는 추상 메서드가 하나 이상 존재 해야 한다 
    (예 : Graphics )

7. 추상클래스는 객체생성 못한다 
    왜? 내용없는 추상메서드를 호출할 수도 있기 때문에 

8. 생성자, static메서드, private메서드는
    추상화 될수 없다.(scjp,ocjp 시험)

9. 추상메서드 : 상속받아서 오버라이딩 해야한다
    public void kk();
==========================
- final 필드 : 변수를 상수화, 값 변경 불가능 
- final 메서드 : 재정의 불가능 
- final 클래스 : 상속 불가능
- final 클래스안의 모든 메서드는 final명시하지 않아도
   묵시적으로 final로 인식하게 된다 
==========================

--------------------------------------------------
             interface                   Abstract class
--------------------------------------------------
키워드    interface                  abstract class

메서드   추상메서드                   추상메서드,일반메서드

다중상속    된다                        안된다

변수        static final               프로그래머 마음대로 사용

--------------------------------------------------
클래스          extends  수퍼클래스
인터페이스    extends     수퍼인터페이스
클래스           implements 인터페이스

※ 클래스는 다중 상속 안된다
※ 인터페이스는 다중 상속 된다 

-----------------------------------------------
[인터페이스 정의 형식]

interface 인터페이스이름{
   static final 변수=값;
   변수=값;
   public 리턴형 메서드();
}

[인터페이스는 클래스에서 상속받아 오버라이딩 하여 사용한다 ]

class 클래스이름 implements 인터페이스
{
   public 리턴형 메서드(){}
   public 리턴형 메서드(){처리내용}
}

인터페이스: 식당의 메뉴판 기능 
 

실습
src/ ch08_interface_abs
